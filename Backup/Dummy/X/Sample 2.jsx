//sample    rectangle = document.rectangles.add({geometricBounds:[39.508, 20.492, 77.008, 47.008], strokeWeight:1, strokeColor:black});  //sample//sample    dialog.pan4 = dialog.add('panel', [210,200,438,350], "類型：");//sample    mapPages = Number(dialog.mapPages.value);//sample    reverseOrder = Number(dialog.reverseOrder.value);//sample    docStartPG = Number(dialog.docStartPG.text);var document = app.documents.add();document.documentPreferences.facingPages = false;app.documents.item(0).viewPreferences.horizontalMeasurementUnits = MeasurementUnits.millimeters;app.documents.item(0).viewPreferences.verticalMeasurementUnits = MeasurementUnits.millimeters;document.documentPreferences.pageWidth = 210;document.documentPreferences.pageHeight = 297;var master = document.masterSpreads.item(0);document.masterSpreads.add();var master32 = document.masterSpreads.item(1);document.masterSpreads.add();var master16 = document.masterSpreads.item(2);document.masterSpreads.add();var master12 = document.masterSpreads.item(3);document.masterSpreads.add();var master8 = document.masterSpreads.item(4);document.masterSpreads.add();var master4 = document.masterSpreads.item(5);master32.rectangles.add({geometricBounds:[45, 15, 71.516, 52.5], strokeWeight:1});master32.rectangles.add({geometricBounds:[45, 15, 71.516, 52.5], strokeWeight:1});master32.rectangles.add({geometricBounds:[71.516, 15, 98.032, 52.5], strokeWeight:1});master32.rectangles.add({geometricBounds:[98.032, 15, 124.548, 52.5], strokeWeight:1});master32.rectangles.add({geometricBounds:[124.548, 15, 151.064, 52.5], strokeWeight:1});master32.rectangles.add({geometricBounds:[45, 52.5 , 71.516, 90], strokeWeight:1});master32.rectangles.add({geometricBounds:[71.516, 52.5 , 98.032, 90], strokeWeight:1});master32.rectangles.add({geometricBounds:[98.032, 52.5 , 124.548, 90], strokeWeight:1});master32.rectangles.add({geometricBounds:[124.548, 52.5 , 151.064, 90], strokeWeight:1});master32.rectangles.add({geometricBounds:[45, 90, 71.516, 127.5], strokeWeight:1});master32.rectangles.add({geometricBounds:[71.516, 90, 98.032, 127.5], strokeWeight:1});master32.rectangles.add({geometricBounds:[98.032, 90, 124.548, 127.5], strokeWeight:1});master32.rectangles.add({geometricBounds:[124.548, 90, 151.064, 127.5], strokeWeight:1});master32.rectangles.add({geometricBounds:[45, 127.5, 71.516, 165], strokeWeight:1});master32.rectangles.add({geometricBounds:[71.516, 127.5, 98.032, 165], strokeWeight:1});master32.rectangles.add({geometricBounds:[98.032, 127.5, 124.548, 165], strokeWeight:1});master32.rectangles.add({geometricBounds:[124.548, 127.5, 151.064, 165], strokeWeight:1});master32.rectangles.add({geometricBounds:[175.936, 15, 202.452, 52.5], strokeWeight:1});master32.rectangles.add({geometricBounds:[202.452, 15, 228.968, 52.5], strokeWeight:1});master32.rectangles.add({geometricBounds:[228.968, 15, 255.484, 52.5], strokeWeight:1});master32.rectangles.add({geometricBounds:[255.484, 15, 282, 52.5], strokeWeight:1});master32.rectangles.add({geometricBounds:[175.936, 52.5 , 202.452, 90], strokeWeight:1});master32.rectangles.add({geometricBounds:[202.452, 52.5 , 228.968, 90], strokeWeight:1});master32.rectangles.add({geometricBounds:[228.968, 52.5 , 255.484, 90], strokeWeight:1});master32.rectangles.add({geometricBounds:[255.484, 52.5 , 282, 90], strokeWeight:1});master32.rectangles.add({geometricBounds:[175.936, 90, 202.452, 127.5], strokeWeight:1});master32.rectangles.add({geometricBounds:[202.452, 90, 228.968, 127.5], strokeWeight:1});master32.rectangles.add({geometricBounds:[228.968, 90, 255.484, 127.5], strokeWeight:1});master32.rectangles.add({geometricBounds:[255.484, 90, 282, 127.5], strokeWeight:1});master32.rectangles.add({geometricBounds:[175.936, 127.5, 202.452, 165], strokeWeight:1});master32.rectangles.add({geometricBounds:[202.452, 127.5, 228.968, 165], strokeWeight:1});master32.rectangles.add({geometricBounds:[228.968, 127.5, 255.484, 165], strokeWeight:1});master32.rectangles.add({geometricBounds:[255.484, 127.5, 282, 165], strokeWeight:1});var nop32 = 0, nop16 = 0, nop12 = 0, nop8 = 0, nop4 = 0;var blankPage = 0;var 類型 = ["大報", "憲報 No. 1", "憲報 No. 2", "憲報 No. 3", "憲報 No. 4", "憲報 No. 5", "憲報 No. 6", "特報", "簽字", "No. 1 + Index A", "No. 2 + Index B", "No. 3 + Index C", "Sup 1 + Index A", "Sup 2 + Index B", "Sup 3 + Index C", ];    if(app.documents.length == 0){        var tmp = new Array();        tmp["width"] = 612;        tmp["height"] = 792;        placementINFO["pgSize"]  = tmp;}var tag = ["", "A", "B", "C", "D", "E",];    if(app.documents.length == 0){        var tmp = new Array();        tmp["width"] = 612;        tmp["height"] = 792;        placementINFO["pgSize"]  = tmp;}var // Get and display the dialogdialog = makeDialog();dialog.center(); // Center dialog in screenif(dialog.show() == 1){    cover = Number(dialog.cover.text);    startContents = Number(dialog.startContents.text);    endContents = Number(dialog.endContents.text);    startPage = Number(dialog.startPage.text);    endPage = Number(dialog.endPage.text);}else{    exit();}// Create dialog boxfunction makeDialog(){	dialog = new Window('dialog', "HAHAHA", "x:0, y:0, width:500, height:500");    dialog.panel = dialog.add('panel', [10, 10, 300, 390], "");	dialog.panel.add('statictext', [10,15,50,40], "類型：");	dialog.cropType = dialog.panel.add('dropdownlist', [50,10,165,35]);	for(i=0;i<類型.length;i++){		dialog.cropType.add('item', 類型[i]);	}        dialog.panel.add('statictext',  [10, 55, 50, 80], "封面：");     dialog.cover = dialog.panel.add('edittext', [50, 50, 110, 75], "");    dialog.cover.onChange = coverValidator;    dialog.panel.add('statictext',  [10, 95, 50, 120], "目錄：");     dialog.startContents = dialog.panel.add('edittext', [50, 90, 110, 115], "");    dialog.startContents.onChange = startContentsValidator;    dialog.panel.add('statictext',  [115, 95, 125, 120], "-");    dialog.endContents = dialog.panel.add('edittext', [125, 90, 185, 115], "");    dialog.endContents.onChange = endContentsValidator;    dialog.cropType = dialog.panel.add('dropdownlist', [200, 90, 235, 115]);    for(i=0;i<tag.length;i++){        dialog.cropType.add('item', tag[i]);    }        dialog.panel.add('statictext',  [10, 135, 50, 160], "內文：");     dialog.startPage = dialog.panel.add('edittext', [50, 130, 110, 155], "");    dialog.startPage.onChange = startPageValidator;       dialog.panel.add('statictext',  [115, 135, 125, 160], "-");    dialog.endPage = dialog.panel.add('edittext', [125, 130, 185, 155], "");     dialog.endPage.onChange = endPageValidator;          dialog.cropType = dialog.panel.add('dropdownlist', [200, 130, 235, 155]);    for(i=0;i<tag.length;i++){        dialog.cropType.add('item', tag[i]);    }    dialog.placeOnLayer = dialog.panel.add('checkbox', [10, 170, 220, 195], " \"This\" Page");	// The buttons	dialog.OKbut = dialog.add('button', [400, 20, 480, 45], "OK");	dialog.OKbut.onClick = onOKclicked;	dialog.CANbut = dialog.add('button', [400, 50, 480, 75], "Cancel");	dialog.CANbut.onClick = onCANclicked;	return dialog;}var totalPage = endPage - startContents + 1;for(totalPage; totalPage >= 32;){    nop32 ++;    totalPage = totalPage - 32;}for(totalPage; totalPage >= 16;){    nop16 ++;    totalPage = totalPage - 16;}for(totalPage; totalPage >= 12;){    nop12 ++;    totalPage = totalPage - 12;}for(totalPage; totalPage >= 8;){    nop8 ++;    totalPage = totalPage - 8;}for(totalPage; totalPage >= 4;){    nop4 ++;    totalPage = totalPage - 4;}makeText(document.pages.item(0), [39.508, 20.492, 77.008, 47.008], "↑\n\n" + totalPage, "Times New Roman", 25, Justification.centerAlign, false, -90);makeText(document.pages.item(0), [66.024, 20.492, 103.524, 47.008], "↑\n\n" + nop32, "Times New Roman", 25, Justification.centerAlign, false, -90);makeText(document.pages.item(0), [92.54, 20.492, 130.04, 47.008], "↑\n\n" + nop16, "Times New Roman", 25, Justification.centerAlign, false, -90);makeText(document.pages.item(0), [119.056, 20.492, 156.556, 47.008], "↑\n\n" + nop12, "Times New Roman", 25, Justification.centerAlign, false, -90);makeText(document.pages.item(0), [39.508, 57.992, 77.008, 84.508], "↑\n\n" + nop8, "Times New Roman", 25, Justification.centerAlign, false, -90);makeText(document.pages.item(0), [66.024, 57.992, 103.524, 84.508], "↑\n\n" + nop4, "Times New Roman", 25, Justification.centerAlign, false, -90);// Validate the dialogfunction coverValidator(){    pageValidator(dialog.cover, placementINFO.pgCount, "Cover");}function startContentsValidator(){	pageValidator(dialog.startContents, placementINFO.pgCount, "Start Contents");}function endContentsValidator(){	pageValidator(dialog.endContents, placementINFO.pgCount, "End Contents");}function startPageValidator(){	pageValidator(dialog.startPage, placementINFO.pgCount, "Start Page");}function endPageValidator(){	pageValidator(dialog.endPage, placementINFO.pgCount, "End Page");}// Take care of OK being clickedfunction onOKclicked(){	dialog.close(1);}// Take care of Cancel being clickedfunction onCANclicked(){	dialog.close(0);}// Make text framefunction makeText(myPage, myBounds, myString, myFontName, myPointSize, myJustification, myFitToContent, myTransfrom){    var textFrame = myPage.textFrames.add({geometricBounds:myBounds});    textFrame.transform (CoordinateSpaces.pasteboardCoordinates, AnchorPoint.centerAnchor, app.transformationMatrices.add({counterclockwiseRotationAngle: myTransfrom}));	    textFrame.texts.item(0).insertionPoints.item(0).contents = myString    textFrame.texts.item(0).parentStory.appliedFont = app.fonts.item(myFontName);    textFrame.texts.item(0).parentStory.pointSize = myPointSize;    textFrame.texts.item(0).justification = myJustification;    textFrame.textFramePreferences.verticalJustification = VerticalJustification.CENTER_ALIGN;    if(myFitToContent == true){        textFrame.fit(FitOptions.frameToContent);    }	return textFrame;}